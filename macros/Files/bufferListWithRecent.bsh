
void bufferListWithRecent() {
	String nameFirst(String pathName) {
		return basename(pathName)+" ("+dirname(pathName)+"/)";
	}
	void openFile(String choice) {
		String basename = choice.replaceAll(" \\(.+$","");
		view.goToBuffer(jEdit.openFile(view,choice.substring(basename.length()+2,choice.length()-1)+basename));
	}
	void recentFilesDialog() {
		void command(String choice) {
			if (choice.equals("Clear recent list")) { 
				new org.gjt.sp.jedit.BufferHistory().clear();
				statMes("Recent files cleared");
			} else
				openFile(choice);
		}
		l.clear();
		for (org.gjt.sp.jedit.BufferHistory.Entry be : new org.gjt.sp.jedit.BufferHistory().getHistory()) { 
			if (new File(be.path).exists()) {
				l.add(nameFirst(be.path));
				if (--maxIntries == 0)
					break;
			}
		}
		for (Buffer b : jEdit.getBuffers())
			if (b.getName().startsWith("Untitled")) 
				l.add(nameFirst(b.getPath()));;
		Collections.sort(l);
		l.add("Clear recent list");
		actionsDialogGUI(this,NumSeq(l,"Recent files"));
	}
	
	void filesInBufferDialog() {
		void command(String choice) {
			if (choice.equals("Recent Files")) {
				recentFilesDialog();
			} else
				openFile(choice);
		}
		for (Buffer b : jEdit.getBuffers()) {
			l.add(nameFirst(b.getPath()));
			if (--maxIntries == 0)
				break;
		}
		
		Collections.sort(l);
		l.add("Recent Files");
		actionsDialogGUI(this,NumSeq(l,"Buffer list"));
	}
	List l = new ArrayList();
	int maxIntries=35;
	filesInBufferDialog();
}
bufferListWithRecent();